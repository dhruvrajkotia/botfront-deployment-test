# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["dev"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    environment: DEV
    env:
      SERVER_ENDPOINT: ${{ secrets.SERVER_ENDPOINT }}
      AUTHENTICATION_TOKEN: ${{ secrets.AUTHENTICATION_TOKEN }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
      SLACK_FOOTER: ${{ secrets.SLACK_FOOTER }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: dev

      - name: Move folder to project directory
        run: |
          echo $GITHUB_WORKSPACE
          cd $GITHUB_WORKSPACE 
          sudo cp -R $GITHUB_WORKSPACE/* /opt/botfront/dev_dhruv/

      - name: Stop Running Containers
        run: |
          cd /opt/botfront/dev_dhruv/
          sudo botfront down

      - name: Deploy Code
        run: |
          cd /opt/botfront/dev_dhruv/
          sudo botfront set-project ${{ secrets.PROJECT_ID }}
          sudo botfront up

      - name: Run Node Script
        run: |
          npm i
          npm run start

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: ${{ job.status }}
        if: always()
